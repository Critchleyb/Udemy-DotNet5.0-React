{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/options/categoryOptions.ts","app/common/form/MyDateinput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetaledHeader.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/form/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","startsWith","userStore","logout","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","fbLogin","accessToken","refreshToken","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","ActivityFormValues","undefined","title","category","description","date","city","venue","Activity","init","Object","assign","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","fbAccessToken","fbLoading","refreshTokenTimeout","creds","setToken","startRefreshTokenTimer","modalStore","closeModal","window","localStorage","removeItem","getUser","name","getFacebookLoginStatus","FB","getLoginStatus","authResponse","facebookLogin","apiLogin","catch","scope","stopRefreshTokenTimer","jwtToken","atob","split","timeout","exp","now","setTimeout","clearTimeout","getItem","appLoaded","setApploaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","Divider","LoadingComponent","Dimmer","MyTextArea","MyTextSelect","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","verticalAlign","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","TabPane","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","ProfileFollowings","menuPosition","Statistic","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.7a5db770.chunk.js","sourcesContent":["export interface Pagination {\r\n  currentPage: number;\r\n  itemsPerPage: number;\r\n  totalItems: number;\r\n  totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T> {\r\n  data: T;\r\n  pagination: Pagination;\r\n\r\n  constructor(data: T, pagination: Pagination) {\r\n    this.data = data;\r\n    this.pagination = pagination;\r\n  }\r\n}\r\n\r\nexport class PagingParams {\r\n  pageNumber;\r\n  pageSize;\r\n\r\n  constructor(pageNumber = 1, pageSize = 2) {\r\n    this.pageNumber = pageNumber;\r\n    this.pageSize = pageSize;\r\n  }\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { history } from \"../..\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { PaginatedResult } from \"../models/pagination\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"../stores/store\";\r\n\r\nconst sleep = (delay: number) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(resolve, delay);\r\n  });\r\n};\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use((config) => {\r\n  const token = store.commonStore.token;\r\n  if (token) config.headers.Authorization = `Bearer ${token}`;\r\n  return config;\r\n});\r\n\r\naxios.interceptors.response.use(\r\n  async (response) => {\r\n    if (process.env.NODE_ENV === \"development\") {\r\n      await sleep(1000);\r\n    }\r\n\r\n    const pagination = response.headers[\"pagination\"];\r\n    if (pagination) {\r\n      response.data = new PaginatedResult(\r\n        response.data,\r\n        JSON.parse(pagination)\r\n      );\r\n      return response as AxiosResponse<PaginatedResult<any>>;\r\n    }\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    const { data, status, config, headers } = error.response!;\r\n    switch (status) {\r\n      case 400:\r\n        if (typeof data === \"string\") {\r\n          toast.error(data);\r\n        }\r\n        if (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\r\n          history.push(\"/not-found\");\r\n        }\r\n        if (data.errors) {\r\n          const modalStateErrors = [];\r\n          for (const key in data.errors) {\r\n            if (data.errors[key]) {\r\n              modalStateErrors.push(data.errors[key]);\r\n            }\r\n          }\r\n          throw modalStateErrors.flat();\r\n        }\r\n        break;\r\n      case 401:\r\n        if (\r\n          status === 401 &&\r\n          headers[\"www-authenticate\"].startsWith('Bearer error=\"invalid_token\"')\r\n        ) {\r\n          store.userStore.logout();\r\n          toast.error(\"Session expired - please login again\");\r\n        }\r\n\r\n        break;\r\n      case 404:\r\n        history.push(\"/not-found\");\r\n        break;\r\n      case 500:\r\n        store.commonStore.setServerError(data);\r\n        history.push(\"/server-error\");\r\n        break;\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\r\n\r\nconst requests = {\r\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\r\n  post: <T>(url: string, body: {}) =>\r\n    axios.post<T>(url, body).then(responseBody),\r\n  put: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\r\n  del: <T>(url: string) => axios.delete<T>(url).then(responseBody),\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams) =>\r\n    axios\r\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\r\n      .then(responseBody),\r\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\r\n  create: (activity: ActivityFormValues) =>\r\n    requests.post<void>(\"/activities\", activity),\r\n  update: (activity: ActivityFormValues) =>\r\n    requests.put<void>(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del<void>(`/activities/${id}`),\r\n  attend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\r\n};\r\n\r\nconst Account = {\r\n  current: () => requests.get<User>(\"/account\"),\r\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\r\n  register: (user: UserFormValues) =>\r\n    requests.post<User>(\"/account/register\", user),\r\n  fbLogin: (accessToken: string) =>\r\n    requests.post<User>(`/account/fbLogin?accessToken=${accessToken}`, {}),\r\n  refreshToken: () => requests.post<User>(\"/account/refreshToken\", {}),\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\r\n  uploadPhoto: (file: Blob) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    return axios.post<Photo>(\"photos\", formData, {\r\n      headers: { \"Content-type\": \"multipart/form-data\" },\r\n    });\r\n  },\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<Profile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  updateFollowing: (username: string) =>\r\n    requests.post(`/follow/${username}`, {}),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get<UserActivity[]>(\r\n      `/profiles/${username}/activities?predicate=${predicate}`\r\n    ),\r\n};\r\n\r\nconst agent = {\r\n  Activities,\r\n  Account,\r\n  Profiles,\r\n};\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees: Profile[];\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  category: string = \"\";\n  description: string = \"\";\n  date: Date | null = null;\n  city: string = \"\";\n  venue: string = \"\";\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.category = activity.category;\n      this.description = activity.description;\n      this.date = activity.date;\n      this.venue = activity.venue;\n      this.city = activity.city;\n    }\n  }\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n  username: string;\r\n  displayName: string;\r\n  image?: string;\r\n  bio?: string;\r\n  followersCount: number;\r\n  followingCount: number;\r\n  following: boolean;\r\n  photos?: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n  constructor(user: User) {\r\n    this.username = user.username;\r\n    this.displayName = user.displayName;\r\n    this.image = user.image;\r\n  }\r\n}\r\n\r\nexport interface Photo {\r\n  id: string;\r\n  url: string;\r\n  isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n  id: string;\r\n  title: string;\r\n  category: string;\r\n  date: Date;\r\n}\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | undefined = undefined;\n  editMode = false;\n  loading = false;\n  loadingInitial = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n        break;\n    }\n  };\n\n  get axiosParams() {\n    const params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      this.setPagination(result.pagination);\n      this.setLoadingInitial(false);\n    } catch (error) {\n      console.log(error);\n      this.setLoadingInitial(false);\n    }\n  };\n\n  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  };\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity;\n        });\n        this.setLoadingInitial(false);\n        return activity;\n      } catch (error) {\n        console.log(error);\n        this.setLoadingInitial(false);\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.username\n      );\n      activity.isHost = activity.hostUsername === user.username;\n      activity.host = activity.attendees?.find(\n        (x) => x.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  setLoadingInitial = (state: boolean) => {\n    this.loadingInitial = state;\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.username;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity?.id!);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (a) => a.username !== user?.username\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity\n          ?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = undefined;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore.user && this.profile) {\r\n      return store.userStore.user.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loadingProfile = false));\r\n    }\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.uploading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingFollowings = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const userActivities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      console.log(userActivities);\r\n      runInAction(() => {\r\n        this.userActivities = userActivities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n  user: User | null = null;\r\n  fbAccessToken: string | null = null;\r\n  fbLoading = false;\r\n  refreshTokenTimeout: any;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  get isLoggedIn() {\r\n    return !!this.user;\r\n  }\r\n\r\n  login = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.login(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    store.commonStore.setToken(null);\r\n    window.localStorage.removeItem(\"jwt\");\r\n    this.user = null;\r\n    history.push(\"/\");\r\n  };\r\n\r\n  getUser = async () => {\r\n    try {\r\n      const user = await agent.Account.current();\r\n      runInAction(() => (this.user = user));\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  register = async (creds: UserFormValues) => {\r\n    try {\r\n      const user = await agent.Account.register(creds);\r\n      store.commonStore.setToken(user.token);\r\n      this.startRefreshTokenTimer(user);\r\n      runInAction(() => (this.user = user));\r\n      history.push(\"/activities\");\r\n      store.modalStore.closeModal();\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  setImage = (image: string) => {\r\n    if (this.user) this.user.image = image;\r\n  };\r\n\r\n  setDisplayName = (name: string) => {\r\n    if (this.user) this.user.displayName = name;\r\n  };\r\n\r\n  getFacebookLoginStatus = async () => {\r\n    window.FB.getLoginStatus((response) => {\r\n      if (response.status === \"connected\") {\r\n        this.fbAccessToken = response.authResponse.accessToken;\r\n      }\r\n    });\r\n  };\r\n\r\n  facebookLogin = () => {\r\n    this.fbLoading = true;\r\n\r\n    const apiLogin = (accessToken: string) => {\r\n      agent.Account.fbLogin(accessToken)\r\n        .then((user) => {\r\n          store.commonStore.setToken(user.token);\r\n          this.startRefreshTokenTimer(user);\r\n          runInAction(() => {\r\n            this.user = user;\r\n            this.fbLoading = false;\r\n          });\r\n          history.push(\"/activities\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          runInAction(() => {\r\n            this.fbLoading = false;\r\n          });\r\n        });\r\n    };\r\n    if (this.fbAccessToken) {\r\n      apiLogin(this.fbAccessToken);\r\n    } else {\r\n      window.FB.login(\r\n        (response) => {\r\n          apiLogin(response.authResponse.accessToken);\r\n        },\r\n        { scope: \"public_profile,email\" }\r\n      );\r\n    }\r\n  };\r\n\r\n  refreshToken = async () => {\r\n    this.stopRefreshTokenTimer();\r\n    try {\r\n      const user = await agent.Account.refreshToken();\r\n      runInAction(() => {\r\n        this.user = user;\r\n        store.commonStore.setToken(user.token);\r\n        this.startRefreshTokenTimer(user);\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  private startRefreshTokenTimer(user: User) {\r\n    const jwtToken = JSON.parse(atob(user.token.split(\".\")[1]));\r\n    const expires = new Date(jwtToken.exp * 1000);\r\n    const timeout = expires.getTime() - Date.now() - 60 * 1000;\r\n    this.refreshTokenTimeout = setTimeout(this.refreshToken, timeout);\r\n  }\r\n\r\n  private stopRefreshTokenTimer() {\r\n    clearTimeout(this.refreshTokenTimeout);\r\n  }\r\n}\r\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore {\r\n  error: ServerError | null = null;\r\n  token: string | null = window.localStorage.getItem(\"jwt\");\r\n  appLoaded = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.token,\r\n      (token) => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setServerError = (error: ServerError) => {\r\n    this.error = error;\r\n  };\r\n\r\n  setToken = (token: string | null) => {\r\n    this.token = token;\r\n    //this will trigger the reaction to update local storage in this classes constructor.\r\n  };\r\n\r\n  setApploaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n  open: boolean;\r\n  body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n  modal: Modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  openModal = (content: JSX.Element) => {\r\n    this.modal.open = true;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  closeModal = () => {\r\n    this.modal.open = false;\r\n    this.modal.body = null;\r\n  };\r\n}\r\n","import {\r\n  HubConnection,\r\n  HubConnectionBuilder,\r\n  LogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n  comments: ChatComment[] = [];\r\n  hubConnection: HubConnection | null = null;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n  }\r\n\r\n  createHubConnection = (activityId: string) => {\r\n    if (store.activityStore.selectedActivity) {\r\n      this.hubConnection = new HubConnectionBuilder()\r\n        .withUrl(process.env.REACT_APP_CHAT_URL + `?activityId=${activityId}`, {\r\n          accessTokenFactory: () => store.userStore.user?.token!,\r\n        })\r\n        .withAutomaticReconnect()\r\n        .configureLogging(LogLevel.Information)\r\n        .build();\r\n    }\r\n\r\n    this.hubConnection\r\n      ?.start()\r\n      .catch((error) =>\r\n        console.log(\"Error establishing the connection: \", error)\r\n      );\r\n\r\n    this.hubConnection?.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n      runInAction(() => {\r\n        comments.forEach((comment) => {\r\n          comment.createdAt = new Date(comment.createdAt + \"Z\");\r\n        });\r\n        this.comments = comments;\r\n      });\r\n    });\r\n\r\n    this.hubConnection?.on(\"RecieveComment\", (comment: ChatComment) => {\r\n      runInAction(() => {\r\n        comment.createdAt = new Date(comment.createdAt);\r\n        this.comments.unshift(comment);\r\n      });\r\n    });\r\n  };\r\n\r\n  stopHubConnection = () => {\r\n    this.hubConnection\r\n      ?.stop()\r\n      .catch((error) => console.log(\"Error stopping the connection: \", error));\r\n  };\r\n\r\n  clearComments = () => {\r\n    this.comments = [];\r\n    this.stopHubConnection();\r\n  };\r\n\r\n  addComment = async (values: any) => {\r\n    values.activityId = store.activityStore.selectedActivity?.id;\r\n    try {\r\n      await this.hubConnection?.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Menu, Image, Dropdown } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} exact to=\"/\" header>\n          <img\n            src=\"/assets/logo.png\"\n            alt=\"logo\"\n            style={{ marginRight: \"10px\" }}\n          />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                as={Link}\n                to={`/profiles/${user?.username}`}\n                text=\"My Profile\"\n                icon=\"user\"\n              />\n              <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All Activites\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\" || new Date())}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if (userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username: string) {\r\n    e.preventDefault();\r\n    profile.following\r\n      ? updateFollowing(username, false)\r\n      : updateFollowing(username, true);\r\n  }\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          color=\"teal\"\r\n          content={profile.following ? \"Following\" : \"Not Following\"}\r\n        />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          basic\r\n          fluid\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e) => handleFollow(e, profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileCard({ profile }: Props) {\r\n  function truncate(str: string | undefined) {\r\n    if (str) {\r\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card as={Link} to={`/profiles/${profile.username}`}>\r\n      <Image src={profile.image || \"/assets/user.png\"} />\r\n      <Card.Content>\r\n        <Card.Header>{profile.displayName}</Card.Header>\r\n        <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Icon name=\"user\" />\r\n        {profile.followersCount}{\" \"}\r\n        {profile.followersCount === 1 ? \"follower\" : \"followers\"}\r\n      </Card.Content>\r\n      <FollowButton profile={profile} />\r\n    </Card>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n  attendees: Profile[];\r\n}\r\n\r\nexport default observer(function ActivityListItemAttendee({\r\n  attendees,\r\n}: Props) {\r\n  const styles = {\r\n    borderColor: \"green\",\r\n    borderWidth: 3,\r\n  };\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map((attendee) => (\r\n        <Popup\r\n          hoverable\r\n          key={attendee.username}\r\n          trigger={\r\n            <List.Item\r\n              key={attendee.username}\r\n              as={Link}\r\n              to={`/profiles/${attendee.username}`}\r\n            >\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"/assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n              />\r\n            </List.Item>\r\n          }\r\n        >\r\n          <Popup.Content>\r\n            <ProfileCard profile={attendee} />\r\n          </Popup.Content>\r\n        </Popup>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            attached=\"top\"\n            color=\"red\"\n            content=\"Cancelled\"\n            style={{ textAlign: \"centre\" }}\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              circular\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                {`Hosted by `}{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"orange\">\n                    You are hosting this activity\n                  </Label>\n                </Item.Description>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <Item.Description>\n                  <Label basic color=\"green\">\n                    You are going to this activity\n                  </Label>\n                </Item.Description>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" /> {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendee attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          color=\"teal\"\n          floated=\"right\"\n          content=\"View\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n}\n","import { observer } from 'mobx-react-lite';\nimport React, { Fragment } from 'react';\nimport { Header } from 'semantic-ui-react';\nimport { useStore } from '../../../app/stores/store';\nimport ActivityListItem from './ActivityListItem';\n\nexport default observer(function ActivityList() {\n    const { activityStore } = useStore();\n    const { groupedActivities } = activityStore;\n\n    return (\n        <>\n            {groupedActivities.map(([group, activities]) => (\n                <Fragment key={group}>\n                    <Header sub color='teal'>\n                        {group}\n                    </Header>\n                    {activities.map(activity => (\n                        <ActivityListItem key={activity.id} activity={activity} />\n                    ))}\n                </Fragment>\n            ))}\n        </>\n\n    )\n})","import React, { Fragment } from \"react\";\r\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 25 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const {\n    loadActivities,\n    activityRegistry,\n    setPagingParams,\n    pagination,\n  } = activityStore;\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleGetNext() {\n    setLoadingNext(true);\n    setPagingParams(new PagingParams(pagination!.currentPage + 1));\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityRegistry.size, loadActivities]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        {activityStore.loadingInitial && !loadingNext ? (\n          <>\n            <ActivityListItemPlaceholder />\n            <ActivityListItemPlaceholder />\n          </>\n        ) : (\n          <InfiniteScroll\n            pageStart={0}\n            loadMore={handleGetNext}\n            hasMore={\n              !loadingNext &&\n              !!pagination &&\n              pagination.currentPage < pagination.totalPages\n            }\n            initialLoad={false}\n          >\n            <ActivityList />\n          </InfiniteScroll>\n        )}\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader style={{ marginTop: 30 }} active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  type?: string;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextInput(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <input {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function LoginForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ email: \"\", password: \"\", error: null }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore\r\n          .login(values)\r\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n      }\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors }) => (\r\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => (\r\n              <Label\r\n                style={{ marginBottom: 10 }}\r\n                basic\r\n                color=\"red\"\r\n                content={errors.error}\r\n              />\r\n            )}\r\n          />\r\n          <Button\r\n            positive\r\n            content=\"Login\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Message } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  errors: any;\r\n}\r\n\r\nexport default function ValidationErrors({ errors }: Props) {\r\n  return (\r\n    <Message error>\r\n      {errors && (\r\n        <Message.List>\r\n          {errors.map((err: any, i: any) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n    </Message>\r\n  );\r\n}\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nexport default observer(function RegisterForm() {\r\n  const { userStore } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{\r\n        displayName: \"\",\r\n        username: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: null,\r\n      }}\r\n      onSubmit={(values, { setErrors }) =>\r\n        userStore.register(values).catch((error) => setErrors({ error }))\r\n      }\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n        username: Yup.string().required(),\r\n        email: Yup.string().required().email(),\r\n        password: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n        <Form\r\n          className=\"ui form error\"\r\n          onSubmit={handleSubmit}\r\n          autoComplete=\"off\"\r\n        >\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Sign up to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\r\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\r\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\r\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\r\n          <ErrorMessage\r\n            name=\"error\"\r\n            render={() => <ValidationErrors errors={errors.error} />}\r\n          />\r\n          <Button\r\n            positive\r\n            content=\"Register\"\r\n            type=\"submit\"\r\n            fluid\r\n            loading={isSubmitting}\r\n            disabled={!isValid || !dirty || isSubmitting}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  Header,\r\n  Segment,\r\n  Image,\r\n  Button,\r\n  Divider,\r\n} from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport LoginForm from \"../users/LoginForm\";\r\nimport RegisterForm from \"../users/RegisterForm\";\r\n\r\nexport default observer(function HomePage() {\r\n  const { userStore, modalStore } = useStore();\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities\r\n        </Header>\r\n        {userStore.isLoggedIn ? (\r\n          <>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to Activities!\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<LoginForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login!\r\n            </Button>\r\n            <Button\r\n              onClick={() => modalStore.openModal(<RegisterForm />)}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register!\r\n            </Button>\r\n            <Divider horizontal inverted>\r\n              Or\r\n            </Divider>\r\n            <Button\r\n              size=\"huge\"\r\n              inverted\r\n              color=\"facebook\"\r\n              content=\"Login with Facebook\"\r\n              onClick={userStore.facebookLogin}\r\n              loading={userStore.fbLoading}\r\n            />\r\n          </>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n});\r\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\ninterface Props {\n    inverted?: boolean;\n    content?: string;\n}\n\nexport default function LoadingComponent({inverted = true, content = 'Loading...'}: Props) {\n    return (\n        <Dimmer active={true} inverted={inverted}>\n            <Loader content={content} />\n        </Dimmer>\n    )\n}","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  rows: number;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextArea(props: Props) {\r\n  const [field, meta] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <textarea {...field} {...props} />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  placeholder: string;\r\n  name: string;\r\n  options: any;\r\n  label?: string;\r\n}\r\n\r\nexport default function MyTextSelect(props: Props) {\r\n  const [field, meta, helpers] = useField(props.name);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <label>{props.label}</label>\r\n      <Select\r\n        clearable\r\n        options={props.options}\r\n        value={field.value || null}\r\n        onChange={(e, d) => helpers.setValue(d.value)}\r\n        onBlur={() => helpers.setTouched(true)}\r\n        placeholder={props.placeholder}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","export const categoryOptions = [\r\n  { text: \"Drinks\", value: \"drinks\" },\r\n  { text: \"Culture\", value: \"culture\" },\r\n  { text: \"Film\", value: \"film\" },\r\n  { text: \"Food\", value: \"food\" },\r\n  { text: \"Music\", value: \"music\" },\r\n  { text: \"Travel\", value: \"travel\" },\r\n];\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\r\n  const [field, meta, helpers] = useField(props.name!);\r\n  return (\r\n    <Form.Field error={meta.touched && !!meta.error}>\r\n      <DatePicker\r\n        {...field}\r\n        {...props}\r\n        selected={(field.value && new Date(field.value)) || null}\r\n        onChange={(value) => helpers.setValue(value)}\r\n      />\r\n      {meta.touched && meta.error ? (\r\n        <Label basic color=\"red\">\r\n          {meta.error}\r\n        </Label>\r\n      ) : null}\r\n    </Form.Field>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/form/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateinput\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nexport default observer(function ActivityForm() {\n  const history = useHistory();\n  const { activityStore } = useStore();\n  const {\n    createActivity,\n    updateActivity,\n    loadActivity,\n    loadingInitial,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The activity title is required\"),\n    description: Yup.string().required(\"The activity description is required\"),\n    category: Yup.string().required(),\n    date: Yup.string().required().nullable(),\n    venue: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id)\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity))\n      );\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isValid, isSubmitting, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput name=\"title\" placeholder=\"Title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <Button\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n              disabled={isSubmitting || !dirty || !isValid}\n            />\n            <Button\n              as={Link}\n              to=\"/activities\"\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          initialValues={{ body: \"\" }}\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key === \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key === \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item key={attendee.username} style={{ position: \"relative\" }}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            ribbon\n            color=\"red\"\n            content=\"Cancelled\"\n          />\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy\")}</p>\n                <p>\n                  Hosted by\n                  <strong>\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {` ${activity.host?.displayName}`}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              color={activity.isCancelled ? \"green\" : \"red\"}\n              floated=\"left\"\n              basic\n              content={\n                activity.isCancelled\n                  ? \"Re-activate Activity\"\n                  : \"Cancel Activity\"\n              }\n              onClick={cancelActivityToggle}\n              loading={loading}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button onClick={updateAttendance} loading={loading}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            onClick={updateAttendance}\n            color=\"teal\"\n            loading={loading}\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\nimport ActivityDetailedHeader from \"./ActivityDetaledHeader\";\n\nexport default observer(function ActivityDetails() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSidebar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from \"react\";\r\nimport { Button, Header, Segment } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport ValidationErrors from \"./ValidationErrors\";\r\n\r\nexport default function TestErrors() {\r\n  const baseUrl = process.env.REACT_APP_API_URL;\r\n  const [errors, setErrors] = useState(null);\r\n\r\n  function handleNotFound() {\r\n    axios\r\n      .get(baseUrl + \"buggy/not-found\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadRequest() {\r\n    axios\r\n      .get(baseUrl + \"buggy/bad-request\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleServerError() {\r\n    axios\r\n      .get(baseUrl + \"buggy/server-error\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleUnauthorised() {\r\n    axios\r\n      .get(baseUrl + \"buggy/unauthorised\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleBadGuid() {\r\n    axios\r\n      .get(baseUrl + \"activities/notaguid\")\r\n      .catch((err) => console.log(err.response));\r\n  }\r\n\r\n  function handleValidationError() {\r\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header as=\"h1\" content=\"Test Error component\" />\r\n      <Segment>\r\n        <Button.Group widths=\"7\">\r\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\r\n          <Button\r\n            onClick={handleBadRequest}\r\n            content=\"Bad Request\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleValidationError}\r\n            content=\"Validation Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleServerError}\r\n            content=\"Server Error\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button\r\n            onClick={handleUnauthorised}\r\n            content=\"Unauthorised\"\r\n            basic\r\n            primary\r\n          />\r\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\r\n        </Button.Group>\r\n      </Segment>\r\n      {errors && <ValidationErrors errors={errors} />}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"search\" />\r\n        Oops - we've looked everywhere and could not find this.\r\n      </Header>\r\n      <Segment.Inline>\r\n        <Button as={Link} to=\"/activities\" primary>\r\n          Return to activities page\r\n        </Button>\r\n      </Segment.Inline>\r\n    </Segment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Container, Header, Segment } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nexport default observer(function ServerError() {\r\n  const { commonStore } = useStore();\r\n  return (\r\n    <Container>\r\n      <Header as=\"h1\" content=\"Server Error\" />\r\n      <Header sub as=\"h5\" color=\"red\" content={commonStore.error?.message} />\r\n      {commonStore.error?.details && (\r\n        <Segment>\r\n          <Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\r\n          <code style={{ marginTop: \"10px\" }}>{commonStore.error.details}</code>\r\n        </Segment>\r\n      )}\r\n    </Container>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../../stores/store\";\r\n\r\nexport default observer(function ModalContainer() {\r\n  const { modalStore } = useStore();\r\n\r\n  return (\r\n    <Modal open={modalStore.modal.open} size=\"mini\">\r\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n});\r\n","import { Form, Formik } from \"formik\";\r\nimport React from \"react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface Props {\r\n  setEditMode: (editmode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\r\n  const {\r\n    profileStore: { profile, updateProfile },\r\n  } = useStore();\r\n  return (\r\n    <Formik\r\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n      onSubmit={(values) => {\r\n        updateProfile(values).then(() => {\r\n          setEditMode(false);\r\n        });\r\n      }}\r\n      validationSchema={Yup.object({\r\n        displayName: Yup.string().required(),\r\n      })}\r\n    >\r\n      {({ isSubmitting, isValid, dirty }) => (\r\n        <Form className=\"ui form\">\r\n          <MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n          <MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n          <Button\r\n            positive\r\n            type=\"submit\"\r\n            loading={isSubmitting}\r\n            content=\"Update profile\"\r\n            floated=\"right\"\r\n            disabled={!isValid || !dirty}\r\n          />\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nexport default observer(function ProfileAbout() {\r\n  const { profileStore } = useStore();\r\n  const { isCurrentUser, profile } = profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width=\"16\">\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile?.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n              onClick={() => setEditMode(!editMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width=\"16\">\r\n          {editMode ? (\r\n            <ProfileEditForm setEditMode={setEditMode} />\r\n          ) : (\r\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities,\r\n  } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, TabPane } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nexport default observer(function ProfileFollowing() {\r\n  const { profileStore } = useStore();\r\n  const { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n  return (\r\n    <TabPane loading={loadingFollowings}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={\r\n              activeTab === 3\r\n                ? `People following ${profile?.displayName}`\r\n                : `People ${profile?.displayName} is following`\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Card.Group itemsPerRow={4}>\r\n            {followings.map((profile) => (\r\n              <ProfileCard key={profile.username} profile={profile} />\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </TabPane>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n  imagePreview: string;\r\n  setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({\r\n  imagePreview,\r\n  setCropper,\r\n}: Props) {\r\n  return (\r\n    <Cropper\r\n      src={imagePreview}\r\n      style={{ height: 200, width: \"100%\" }}\r\n      initialAspectRatio={1}\r\n      aspectRatio={1}\r\n      preview=\".img-preview\"\r\n      guides={false}\r\n      viewMode={1}\r\n      autoCropArea={1}\r\n      background={false}\r\n      onInitialized={(cropper) => setCropper(cropper)}\r\n    />\r\n  );\r\n}\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n  setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({ setFiles }: Props) {\r\n  const dzStyles = {\r\n    border: \"dashed 3px #eee\",\r\n    borderColor: \"#eee\",\r\n    borderRadius: \"5px\",\r\n    paddingTop: \"30px\",\r\n    textAlign: \"center\" as \"center\",\r\n    height: 200,\r\n  };\r\n\r\n  const dzActive = {\r\n    borderColor: \"green\",\r\n  };\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      setFiles(\r\n        acceptedFiles.map((file: any) =>\r\n          Object.assign(file, {\r\n            preview: URL.createObjectURL(file),\r\n          })\r\n        )\r\n      );\r\n    },\r\n    [setFiles]\r\n  );\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name=\"upload\" size=\"huge\" />\r\n      <Header content=\"Drop image here\" />\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({ loading, uploadPhoto }: Props) {\r\n  const [files, setFiles] = useState<any>([]);\r\n  const [cropper, setCropper] = useState<Cropper>();\r\n\r\n  function onCrop() {\r\n    if (cropper) {\r\n      cropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n    };\r\n  }, [files]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 1 - Add Photo\" />\r\n        <PhotoWidgetDropzone setFiles={setFiles} />\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 2 - Resize image\" />\r\n        {files && files.length > 0 && (\r\n          <PhotoWidgetCropper\r\n            setCropper={setCropper}\r\n            imagePreview={files[0].preview}\r\n          />\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1} />\r\n      <Grid.Column width={4}>\r\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\r\n        {files && files.length > 0 && (\r\n          <>\r\n            <div\r\n              className=\"img-preview\"\r\n              style={{ minHeight: 200, overflow: \"hidden\" }}\r\n            />\r\n            <Button.Group widths={2}>\r\n              <Button\r\n                onClick={onCrop}\r\n                positive\r\n                icon=\"check\"\r\n                loading={loading}\r\n              />\r\n              <Button\r\n                onClick={() => setFiles([])}\r\n                icon=\"close\"\r\n                disabled={loading}\r\n              />\r\n            </Button.Group>\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n}\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfilePhotos({ profile }: Props) {\r\n  const {\r\n    profileStore: {\r\n      isCurrentUser,\r\n      uploadPhoto,\r\n      uploading,\r\n      loading,\r\n      setMainPhoto,\r\n      deletePhoto,\r\n    },\r\n  } = useStore();\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState(\"\");\r\n\r\n  function handlePhotoUpload(file: Blob) {\r\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\r\n  }\r\n\r\n  function handleSetMainPhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    setMainPhoto(photo);\r\n  }\r\n\r\n  function handleDeletePhoto(\r\n    photo: Photo,\r\n    e: SyntheticEvent<HTMLButtonElement>\r\n  ) {\r\n    setTarget(e.currentTarget.name);\r\n    deletePhoto(photo);\r\n  }\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header icon=\"image\" content=\"Photos\" floated=\"left\" />\r\n          {isCurrentUser && (\r\n            <Button\r\n              floated=\"right\"\r\n              basic\r\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handlePhotoUpload}\r\n              loading={uploading}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile.photos?.map((photo) => (\r\n                <Card key={photo.id}>\r\n                  <Image src={photo.url} />\r\n                  {isCurrentUser && (\r\n                    <Button.Group fluid widths={2}>\r\n                      <Button\r\n                        basic\r\n                        color=\"green\"\r\n                        content=\"Main\"\r\n                        name={photo.id}\r\n                        disabled={photo.isMain}\r\n                        loading={target === photo.id && loading}\r\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\r\n                      />\r\n                      <Button\r\n                        basic\r\n                        color=\"red\"\r\n                        icon=\"trash\"\r\n                        name={`del-${photo.id}`}\r\n                        loading={target === `del-${photo.id}` && loading}\r\n                        onClick={(e) => handleDeletePhoto(photo, e)}\r\n                      />\r\n                    </Button.Group>\r\n                  )}\r\n                </Card>\r\n              ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileContent({ profile }: Props) {\r\n  const { profileStore } = useStore();\r\n  const panes = [\r\n    {\r\n      menuItem: \"About\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfileAbout />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Photos\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfilePhotos profile={profile} />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Events\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfileActivities />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Followers\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfileFollowings />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n    {\r\n      menuItem: \"Following\",\r\n      render: () => (\r\n        <Tab.Pane>\r\n          <ProfileFollowings />\r\n        </Tab.Pane>\r\n      ),\r\n    },\r\n  ];\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport {\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Item,\r\n  Segment,\r\n  Statistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function ProfileHeader({ profile }: Props) {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || `/assets/user.png`}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\" content={profile.displayName} />\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          <FollowButton profile={profile} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n});\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nexport default observer(function ProfilePage() {\r\n  const { username } = useParams<{ username: string }>();\r\n  const { profileStore } = useStore();\r\n  const { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(username);\r\n    return () => {\r\n      setActiveTab(0);\r\n    };\r\n  }, [loadProfile, username, setActiveTab]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column>\r\n        {profile && (\r\n          <>\r\n            <ProfileHeader profile={profile} />\r\n            <ProfileContent profile={profile} />\r\n          </>\r\n        )}\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n});\r\n","import React from \"react\";\r\nimport { Redirect, RouteComponentProps } from \"react-router\";\r\nimport { Route, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport NavBar from \"./NavBar\";\r\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Route, Switch, useLocation } from \"react-router-dom\";\r\nimport HomePage from \"../../features/home/HomePage\";\r\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\r\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\r\nimport TestErrors from \"../../features/errors/TestError\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport NotFound from \"../../features/errors/NotFound\";\r\nimport ServerError from \"../../features/errors/ServerError\";\r\nimport { useStore } from \"../stores/store\";\r\nimport LoadingComponent from \"./LoadingComponent\";\r\nimport ModalContainer from \"../common/form/modals/ModalContainer\";\r\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const { commonStore, userStore } = useStore();\r\n\r\n  useEffect(() => {\r\n    if (commonStore.token) {\r\n      userStore.getUser().finally(() => commonStore.setApploaded());\r\n    } else {\r\n      userStore.getFacebookLoginStatus().then(() => commonStore.setApploaded());\r\n    }\r\n  }, [commonStore, userStore]);\r\n\r\n  if (!commonStore.appLoaded)\r\n    return <LoadingComponent content=\"Loading app...\" />;\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\r\n      <ModalContainer />\r\n      <Route exact path=\"/\" component={HomePage} />\r\n      <Route\r\n        path={\"/(.+)\"}\r\n        render={() => (\r\n          <>\r\n            <NavBar />\r\n            <Container style={{ marginTop: \"7em\" }}>\r\n              <Switch>\r\n                <PrivateRoute\r\n                  exact\r\n                  path=\"/activities\"\r\n                  component={ActivityDashboard}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/activities/:id\"\r\n                  component={ActivityDetails}\r\n                />\r\n                <PrivateRoute\r\n                  key={location.key}\r\n                  path={[\"/createActivity\", \"/manage/:id\"]}\r\n                  component={ActivityForm}\r\n                />\r\n                <PrivateRoute\r\n                  path=\"/profiles/:username\"\r\n                  component={ProfilePage}\r\n                />\r\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\r\n                <Route path=\"/server-error\" component={ServerError} />\r\n                <Route component={NotFound} />\r\n              </Switch>\r\n            </Container>\r\n          </>\r\n        )}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}